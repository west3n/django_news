from django.contrib.auth.models import User
from news.models import *

1.
>>> john = User.objects.create_user('John')
>>> sarah = User.objects.create_user('Sarah')

2.
>>> john_author = Author.objects.create(user_name = john)
>>> sarah_author = Author.objects.create(user_name = sarah)

3.
>>> sport_category = Category.objects.create(category_name = 'sport')
>>> music_category = Category.objects.create(category_name = 'music')
>>> art_category = Category.objects.create(category_name = 'art')
>>> tech_category = Category.objects.create(category_name = 'tech')

4.
>>> post_1 = Post.objects.create(author_name = john_author, post_type = 'AR', post_header = 'Инновации в спорте: примеры из Олимпиады Сочи', post_text = 'ReconJet – очки интерактивного свойства. В их составе – процессор, камера для съёмок видео в разрешении HD, слот памяти, акселератор в трёх измерениях. Применяется устройство в любое время года теми, кто знает толк в «экстриме».')
>>> post_2 = Post.objects.create(author_name = sarah_author, post_type = 'AR', post_header = 'Как изменилось искусство с приходом новых технологий', post_text = 'Искусство в некотором смысле подобно экономике – может расти количественно и качественно. В первом случае – за счет расширения спектра органов чувств, которые оно захватывает. Сначала искусство либо слушали, либо смотрели. Потом еще читали. В какой-то момент стали и слушать, и смотреть. И нюхать. И ощущать. В конце концов мы получили иммерсивное искусство – полное погружение и особое взаимодействие автора и зрителя. Причем для этого необязательно использовать новые технологии.')
>>> post_3 = Post.objects.create(author_name = john_author, post_type = 'NW', post_header='В Щёкино появился виртуальный концертный зал', post_text ='3 ноября в рамках нацпроекта «Культура» в городском Дворце культуры города Щекино прошло торжественное открытие виртуального концертного зала.Малый зал и фойе Дворца культуры полностью отремонтированы. Средства на оснащение концертного зала световым и проекционным оборудованием были выделены из федерального бюджета. На открытии посетители посмотрели концерт «25 лет тишины», посвященный памяти поэта, композитора, актера и музыканта Игоря Талькова.')

5.
>>> PostCategory.objects.create(post_id=1, category_id=1)
>>> PostCategory.objects.create(post_id=1, category_id=3)
>>> PostCategory.objects.create(post_id=2, category_id=3)
>>> PostCategory.objects.create(post_id=2, category_id=4)
>>> PostCategory.objects.create(post_id=3, category_id=2)
>>> PostCategory.objects.create(post_id=3, category_id=3)

6.
>>> Comment.objects.create(comment_post_id = 1, comment_user = john, comment_text = 'Здорово!')
>>> Comment.objects.create(comment_post_id = 2, comment_user = john, comment_text = 'Ничего себе, вот это да!')
>>> Comment.objects.create(comment_post_id = 2, comment_user = sarah, comment_text = 'А мне не нравится')
>>> Comment.objects.create(comment_post_id = 3, comment_user = sarah, comment_text = 'И вот это тоже не нравится')

7.
>>> Post.like(Post.objects.get(id=1), 1)
>>> Post.like(Post.objects.get(id=1), 1)
>>> Post.like(Post.objects.get(id=2), 1)
>>> Post.like(Post.objects.get(id=2), 1)
>>> Post.like(Post.objects.get(id=2), 1)
>>> Post.like(Post.objects.get(id=3), 1)
>>> Post.like(Post.objects.get(id=3), 1)
>>> Post.like(Post.objects.get(id=3), 1)
>>> Post.like(Post.objects.get(id=3), 1)
>>> Post.dislike(Post.objects.get(id=3), 1)
>>> Comment.like(Comment.objects.get(id=1), 1)
>>> Comment.like(Comment.objects.get(id=1), 1)
>>> Comment.like(Comment.objects.get(id=1), 1)
>>> Comment.like(Comment.objects.get(id=1), 1)
>>> Comment.like(Comment.objects.get(id=2), 1)
>>> Comment.like(Comment.objects.get(id=2), 1)
>>> Comment.like(Comment.objects.get(id=3), 1)
>>> Comment.dislike(Comment.objects.get(id=1), 1)
>>> Comment.like(Comment.objects.get(id=4), 1)
>>> Comment.like(Comment.objects.get(id=4), 1)
>>> Comment.like(Comment.objects.get(id=4), 1)
>>> Comment.like(Comment.objects.get(id=4), 1)

8.
author_1 = Author.objects.get(id=1)
author_1.update_rating()
author_2 = Author.objects.get(id=2)
author_2.update_rating()

9.
Author.objects.filter().order_by('-user_rating').values('user_rating','user_name')

10.
Post.objects.filter().order_by('-post_rating').values('post_date','author_name','post_rating')

11.
Comment.objects.filter(comment_post_id=3).values()